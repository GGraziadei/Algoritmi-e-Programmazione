#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX_WORD 10 //max numero di occorrenze
#define N 20
#define SC 5
#define SS 200
#define SP 25
#define TESTO "testo.txt"
#define SEQUENZE "sequenze.txt"

typedef struct{
int l;
int occIndex [MAX_WORD];
char words[MAX_WORD][SP];
int occNow;
char seq [SC];
}Parola;


int main()
{
    Parola parole[N];
    int n = leggiParole(parole,n);
    trovaOccorrenze(parole,n);

    return 0;
}

int leggiParole( Parola p[]){
    int j,i,n =0;
    FILE *fin = fopen(SEQUENZE,"r");
    if(fin==NULL)EXIT_FAILURE;

    fscanf(fin,"%d",&n);

    for(i=0;i<n;i++){
        if(fscanf(fin,"%s",p[i].seq)!=1)
           exit("Check sequenze.txt necessario");
        p[i].l = strlen(p[i].seq);
        p[i].occNow = 0;
        for(j=0; j<MAX_WORD; j++)p[i].occIndex[j] =-1;
    }
    printf("sequenze lette: %d\n",n);

    fclose(fin);
    return n;
}

void trovaOccorrenze (Parola p[],int n){
    int parole,l,ll,i,ii,j,jj;
    char str[SS], word[SP];
    char *strTest;
    FILE *fin = fopen(TESTO,"r");
    if(fin==NULL)EXIT_FAILURE;
    parole =0;
    /* Non avendo vincoli in out leggo parola per parola */

        while(fgets(str,SS,fin)!= NULL){
            l = strlen(str);
            j=0;

            for(i=0; i<l; i++){ /* Costruzione words riga*/
                if(isspace(str[i]) || ispunct(str[i])){
                    parole = parole+1;
                    jj =0;
                    /* j indice dell'ultimo alnum prima della terminazione*/
                     for(ii=i-j; ii<i; ii++){
                            word[jj]=str[ii];
                            jj = jj+1;
                     }
                     word[jj] = '\0';/* jj = strlen(word) */

                     for(ii=0; ii<jj; ii++){

                     }
                        strTest = &str[i];
                     ll = strlen(strTest);

                    j=0;
                }
                else if (isalnum(str[i])) j=j+1; //continua a "caricare" caratteri
            }
        }

    fclose(fin);
return;
}
